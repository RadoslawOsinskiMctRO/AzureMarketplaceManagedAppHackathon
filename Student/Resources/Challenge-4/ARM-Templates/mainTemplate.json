{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Assign a prefix for the VM name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Select the Azure region for the resources"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Select the VM size"
            }
        },
        "userName": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "Specify the OS username"
            }
        },
        "pwd": {
            "type": "securestring",
            "metadata": {
                "description": "If Windows, specify the password for the OS username"
            }
        },
        "dnsName": {
            "type": "string",
            "metadata": {
                "description": "Specify the DNS name for the managed web app"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "metadata": {
                "description": "Assign a name for the public IP address"
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "[concat('webApp-', uniqueString(resourceGroup().id))]",
            "minLength": 2,
            "metadata": {
                "description": "Web app name."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "B1",
            "metadata": {
                "description": "The SKU of App Service Plan."
            }
        },
        "repoUrl": {
            "type": "string",
            "defaultValue": "https://github.com/azure-samples/dotnetcore-sqldb-tutorial",
            "metadata": {
                "description": "Optional Git Repo URL"
            }
        },
        "sqlDatabaseCollation": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
            "metadata": {
                "description": "The SQL database collation"
            }
        },
        "sqlDatabaseEdition": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "The SQL server edition"
            }
        },
        "sqldatabaseRequestedServiceObjectiveName": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "P1",
                "P2",
                "P3"
            ],
            "metadata": {
                "description": "Describes the performance level for Edition"
            }
        }
    },
    "variables": {
        "publicIPAddressName": "[concat(parameters('publicIPAddressName'), 'IP')]",
        "nicName": "[concat(parameters('vmNamePrefix'), 'nic')]",
        "vmVNetName": "vmVNet",
        "subnetName": "subnet1",
        "osType": {
            "imageOffer": "WindowsServer",
            "imageSku": "2019-Datacenter",
            "imagePublisher": "MicrosoftWindowsServer"
        },
        "appServicePlanPortalName": "[concat('AppServicePlan-', parameters('webAppName'))]",
        "sqlServerAdminLogin": "[parameters('userName')]",
        "sqlServerAdminLoginPassword": "[parameters('pwd')]",
        "sqlServerName": "[concat('sqlserver-mkhack-', parameters('vmNamePrefix'))]",
        "sqlDatabaseName": "[concat('sqldb-mkhack-', parameters('vmNamePrefix'))]"

    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('vmVNetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', 'NSG')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', 'NSG')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "NSG",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "access": "Allow",
                            "description": "Inbound RDP rule",
                            "direction": "Inbound",
                            "destinationAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": 3389,
                            "sourcePortRange": "*",
                            "priority": 500,
                            "sourceAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "access": "Allow",
                            "description": "Inbound HTTP rule",
                            "direction": "Inbound",
                            "destinationAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": 80,
                            "sourcePortRange": "*",
                            "priority": 550,
                            "sourceAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPallocationmethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(parameters('dnsName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('vmVNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('vmVNetName'), variables('subnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[concat(parameters('vmNamePrefix'), '-vm')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkinterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmsize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('vmNamePrefix'), '-app')]",
                    "adminusername": "[parameters('username')]",
                    "adminpassword": "[parameters('pwd')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osType').imagePublisher]",
                        "offer": "[variables('osType').imageOffer]",
                        "version": "latest",
                        "sku": "[variables('osType').imageSku]"
                    },
                    "osdisk": {
                        "name": "[concat(parameters('vmNamePrefix'), '-osDisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "networkprofile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkinterfaces', variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('appServicePlanPortalName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
                "siteConfig": {
                    "connectionStrings": [
                        {
                            "name": "MyDbConnection",
                            "connectionString": "[concat('Server=tcp:', variables('sqlServerName'), '.database.windows.net,1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', variables('sqlServerAdminLogin'), ';Password=', variables('sqlServerAdminLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
                            "type": "SQLAzure"
                        }
                    ]
                },
                "resources": [
                    {
                        "condition": "[contains(parameters('repoUrl'),'http')]",
                        "type": "sourcecontrols",
                        "apiVersion": "2020-06-01",
                        "name": "web",
                        "location": "[parameters('location')]",
                        "dependsOn": [
                            "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
                        ],
                        "properties": {
                            "repoUrl": "[parameters('repoUrl')]",
                            "branch": "master",
                            "isManualIntegration": true
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "apiVersion": "2020-11-01-preview",
            "tags": {
                "displayName": "SQL Server"
            },
            "properties": {
                "administratorLogin": "[variables('sqlServerAdminLogin')]",
                "administratorLoginPassword": "[variables('sqlServerAdminLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "AllowAllWindowsAzureIps",
                    "type": "firewallrules",
                    "location": "[parameters('location')]",
                    "apiVersion": "2020-11-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                },
                {
                    "name": "[variables('sqlDatabaseName')]",
                    "type": "databases",
                    "location": "[parameters('location')]",
                    "apiVersion": "2020-11-01-preview",
                    "dependsOn": [
                        "[variables('sqlServerName')]"
                    ],
                    "tags": {
                        "displayName": "SQL Database"
                    },
                    "properties": {
                        "collation": "[parameters('sqlDatabaseCollation')]",
                        "edition": "[parameters('sqlDatabaseEdition')]",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "[parameters('sqldatabaseRequestedServiceObjectiveName')]"
                    }
                }
            ]
        }


    ],
    "outputs": {
        "vmEndpoint": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}